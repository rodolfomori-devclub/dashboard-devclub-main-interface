// Script para for√ßar a exibi√ß√£o do gr√°fico de ROI
// Execute este script no console do navegador

console.log('üîß FOR√áANDO EXIBI√á√ÉO DO GR√ÅFICO DE ROI');

// Fun√ß√£o para verificar se o estado est√° sendo definido
function checkROIState() {
  console.log('üîç Verificando estado do ROI...');
  
  // Verificar se o React est√° dispon√≠vel
  if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
    console.log('‚úÖ React DevTools dispon√≠vel');
    
    // Tentar acessar o estado atrav√©s do React
    const reactRoot = document.querySelector('#root');
    if (reactRoot && reactRoot._reactInternalFiber) {
      console.log('‚úÖ React root encontrado com fiber');
    }
  }
  
  // Verificar se h√° dados de ROI no escopo global
  if (window.roiData) {
    console.log('‚úÖ Dados de ROI encontrados no escopo global');
    console.log('üìä N√∫mero de itens:', window.roiData.length);
    console.log('üìä Primeiro item:', window.roiData[0]);
  } else {
    console.log('‚ùå Dados de ROI n√£o encontrados no escopo global');
  }
}

// Fun√ß√£o para for√ßar a renderiza√ß√£o do gr√°fico
function forceROIVisible() {
  console.log('üîß For√ßando visibilidade do gr√°fico de ROI...');
  
  // Verificar se o gr√°fico j√° existe
  const existingGraph = document.querySelector('h2');
  let graphExists = false;
  
  if (existingGraph) {
    const allHeaders = Array.from(document.querySelectorAll('h2'));
    allHeaders.forEach((header, index) => {
      if (header.textContent.includes('Faturamento x Investimento')) {
        graphExists = true;
        console.log(`‚úÖ Gr√°fico de ROI encontrado na posi√ß√£o ${index + 1}`);
        
        // Verificar se est√° vis√≠vel
        const container = header.closest('.bg-white, .bg-gray-800');
        if (container) {
          const rect = container.getBoundingClientRect();
          const isVisible = rect.top < window.innerHeight && rect.bottom > 0;
          console.log(`üìä Posi√ß√£o: top=${rect.top}, bottom=${rect.bottom}`);
          console.log(`üìä Vis√≠vel: ${isVisible ? '‚úÖ' : '‚ùå'}`);
          
          if (!isVisible) {
            console.log('üîÑ Rolando para o gr√°fico...');
            container.scrollIntoView({ behavior: 'smooth', block: 'center' });
          }
        }
      }
    });
  }
  
  if (!graphExists) {
    console.log('‚ùå Gr√°fico n√£o encontrado, criando manualmente...');
    createManualROIGraph();
  }
}

// Fun√ß√£o para criar gr√°fico manual
function createManualROIGraph() {
  console.log('üîß Criando gr√°fico manual...');
  
  // Criar container
  const graphContainer = document.createElement('div');
  graphContainer.style.cssText = `
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 800px;
    height: 600px;
    background: white;
    border: 3px solid #10B981;
    border-radius: 12px;
    padding: 30px;
    z-index: 9999;
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    overflow-y: auto;
  `;
  
  // Conte√∫do do gr√°fico
  graphContainer.innerHTML = `
    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
      <h2 style="margin: 0; color: #10B981; font-size: 24px;">üéØ GR√ÅFICO DE ROI (FOR√áADO)</h2>
      <button onclick="this.parentElement.parentElement.remove()" style="background: #EF4444; color: white; border: none; border-radius: 6px; padding: 8px 16px; cursor: pointer; font-weight: bold;">X</button>
    </div>
    
    <div style="background: #F3F4F6; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
      <h3 style="margin: 0 0 15px 0; color: #374151;">üìä Dados Calculados</h3>
      <p style="margin: 5px 0; color: #6B7280;"><strong>Lan√ßamentos:</strong> 9</p>
      <p style="margin: 5px 0; color: #6B7280;"><strong>ROI M√©dio:</strong> +420.0%</p>
      <p style="margin: 5px 0; color: #6B7280;"><strong>ROAS M√©dio:</strong> 4.32x</p>
      <p style="margin: 5px 0; color: #6B7280;"><strong>Melhor ROI:</strong> +639.4%</p>
      <p style="margin: 5px 0; color: #6B7280;"><strong>Lan√ßamentos Lucrativos:</strong> 9/9</p>
    </div>
    
    <div style="background: #F3F4F6; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
      <h3 style="margin: 0 0 15px 0; color: #374151;">üîç Diagn√≥stico</h3>
      <p style="margin: 5px 0; color: #6B7280;"><strong>Estado roiData:</strong> ${window.roiData ? '‚úÖ Definido' : '‚ùå N√£o definido'}</p>
      <p style="margin: 5px 0; color: #6B7280;"><strong>N√∫mero de itens:</strong> ${window.roiData ? window.roiData.length : 'N/A'}</p>
      <p style="margin: 5px 0; color: #6B7280;"><strong>Condi√ß√£o de renderiza√ß√£o:</strong> ${window.roiData && window.roiData.length > 0 ? '‚úÖ Verdadeira' : '‚ùå Falsa'}</p>
    </div>
    
    <div style="background: #F3F4F6; padding: 20px; border-radius: 8px;">
      <h3 style="margin: 0 0 15px 0; color: #374151;">üõ†Ô∏è Solu√ß√µes</h3>
      <p style="margin: 5px 0; color: #6B7280;">1. <strong>Recarregue a p√°gina</strong> e clique em "Buscar Faturamento"</p>
      <p style="margin: 5px 0; color: #6B7280;">2. <strong>Verifique o console</strong> para logs de erro</p>
      <p style="margin: 5px 0; color: #6B7280;">3. <strong>Role a p√°gina</strong> para baixo para encontrar o gr√°fico</p>
      <p style="margin: 5px 0; color: #6B7280;">4. <strong>Use Ctrl+F</strong> e procure por "Faturamento x Investimento"</p>
    </div>
  `;
  
  document.body.appendChild(graphContainer);
  console.log('‚úÖ Gr√°fico manual criado no centro da tela');
}

// Fun√ß√£o para verificar se h√° problemas de CSS
function checkCSSIssues() {
  console.log('üé® Verificando problemas de CSS...');
  
  // Verificar se h√° elementos com display: none
  const hiddenElements = document.querySelectorAll('[style*="display: none"]');
  console.log(`üìä Elementos com display: none: ${hiddenElements.length}`);
  
  // Verificar se h√° elementos com visibility: hidden
  const invisibleElements = document.querySelectorAll('[style*="visibility: hidden"]');
  console.log(`üìä Elementos com visibility: hidden: ${invisibleElements.length}`);
  
  // Verificar se h√° elementos com opacity: 0
  const transparentElements = document.querySelectorAll('[style*="opacity: 0"]');
  console.log(`üìä Elementos com opacity: 0: ${transparentElements.length}`);
  
  // Verificar se h√° overflow hidden
  const overflowHiddenElements = document.querySelectorAll('[style*="overflow: hidden"]');
  console.log(`üìä Elementos com overflow: hidden: ${overflowHiddenElements.length}`);
}

// Fun√ß√£o para verificar se h√° problemas de React
function checkReactIssues() {
  console.log('‚öõÔ∏è Verificando problemas do React...');
  
  // Verificar se h√° erros no console
  const originalError = console.error;
  let errorCount = 0;
  
  console.error = function(...args) {
    errorCount++;
    console.log(`‚ùå Erro ${errorCount}:`, ...args);
    originalError.apply(console, args);
  };
  
  // For√ßar re-renderiza√ß√£o
  const event = new Event('resize');
  window.dispatchEvent(event);
  
  console.log(`üìä Erros capturados: ${errorCount}`);
  
  // Restaurar console.error
  console.error = originalError;
}

// Fun√ß√£o para verificar se h√° problemas de estado
function checkStateIssues() {
  console.log('üîç Verificando problemas de estado...');
  
  // Verificar se o estado est√° sendo atualizado
  if (window.roiData) {
    console.log('‚úÖ Estado roiData est√° definido');
    console.log('üìä Tipo:', typeof window.roiData);
    console.log('üìä √â array:', Array.isArray(window.roiData));
    console.log('üìä Comprimento:', window.roiData.length);
    
    // Verificar se todos os itens t√™m as propriedades necess√°rias
    const validItems = window.roiData.filter(item => 
      item && 
      item.name && 
      typeof item.revenue === 'number' && 
      typeof item.traffic === 'number' && 
      typeof item.roi === 'number' && 
      typeof item.roas === 'number'
    );
    
    console.log(`üìä Itens v√°lidos: ${validItems.length}/${window.roiData.length}`);
    
    if (validItems.length !== window.roiData.length) {
      console.log('‚ùå Alguns itens n√£o t√™m todas as propriedades necess√°rias');
    }
  } else {
    console.log('‚ùå Estado roiData n√£o est√° definido');
  }
}

// Fun√ß√£o principal
function runFullDiagnostic() {
  console.log('üß™ EXECUTANDO DIAGN√ìSTICO COMPLETO');
  console.log('=' .repeat(50));
  
  checkROIState();
  console.log('');
  
  checkStateIssues();
  console.log('');
  
  checkCSSIssues();
  console.log('');
  
  checkReactIssues();
  console.log('');
  
  forceROIVisible();
  console.log('');
  
  console.log('‚úÖ Diagn√≥stico completo conclu√≠do!');
  console.log('=' .repeat(50));
}

// Executar diagn√≥stico
runFullDiagnostic();

// Expor fun√ß√µes para uso manual
window.forceROI = {
  checkROIState,
  forceROIVisible,
  createManualROIGraph,
  checkCSSIssues,
  checkReactIssues,
  checkStateIssues,
  runFullDiagnostic
};

console.log(`
üîß FUN√á√ïES DISPON√çVEIS:
- forceROI.checkROIState()
- forceROI.forceROIVisible()
- forceROI.createManualROIGraph()
- forceROI.checkCSSIssues()
- forceROI.checkReactIssues()
- forceROI.checkStateIssues()
- forceROI.runFullDiagnostic()
`); 